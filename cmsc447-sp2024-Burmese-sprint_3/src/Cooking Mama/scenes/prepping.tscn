[gd_scene load_steps=4 format=3 uid="uid://qhu1drqcgwgs"]

[ext_resource type="Texture2D" uid="uid://spl8u3me3yh7" path="res://assets/cutting_board.png" id="1_4ly8t"]

[sub_resource type="GDScript" id="GDScript_kk13c"]
script/source = "extends Sprite2D

var sprites = [
	{\"sprite\": preload(\"res://assets/tomato_top.png\"), \"cuts\": [preload(\"res://assets/tomato_cut1.png\"), preload(\"res://assets/tomato_cut2.png\")]},
	{\"sprite\": preload(\"res://assets/lettuce_top.png\"), \"cuts\": [preload(\"res://assets/lettuce_cut1.png\"), preload(\"res://assets/lettuce_cut2.png\")]}
]
var sprite_index = 0 #start with tomato
var sprite_cut = 0 #start with no cuts
var knife
var knife_speed = 400
var screen_center_x
var screen_center_y

@onready var timer = $Timer
var gameTime = 15 # Time (in seconds) that this section lasts before moving on to the next

func _input(event):
	print(knife.position.x)
	if event is InputEventMouseButton and event.is_pressed() and event.button_index == MOUSE_BUTTON_LEFT:
		#need to fix this for all screen sizes
		if abs(knife.position.x - (screen_center_x - self.texture.get_width())) <= 100:
			if get_rect().has_point(to_local(event.position)):
				if sprite_cut < len(sprites[sprite_index][\"cuts\"]):
					self.texture = sprites[sprite_index][\"cuts\"][sprite_cut]
					sprite_cut += 1
					print(\"You clicked on the sprite - Cut \", sprite_cut)
				else:
					print(\"Sprite is fully cut!\")
					next_sprite()
		else:
			print(\"You clicked at the wrong time\")

func _ready():
	timer.wait_time = gameTime
	print(\"timer start\")
	timer.start()
	
	set_sprite(0) #start with first sprite
	
	# Add and position the knife sprite
	knife = Sprite2D.new()
	knife.texture = preload(\"res://assets/knife.png\")
	add_child(knife)
	knife.position.y = self.position.y - 100 #self.position.y - 150  
	knife.visible = true
	# calculate screen center
	screen_center_x = get_viewport_rect().size.x - 100 #get_viewport_rect().size.x / 2 
	print(\"test\", screen_center_x)
	
	# await get_tree().create_timer(15).timeout
	# queue_free()
	# get_tree().change_scene_to_file(\"res://scenes/cooking.tscn\")


	
func _process(delta):
	#Move the knife back and forth
	knife.position.x += knife_speed * delta
	if knife.position.x > get_viewport_rect().size.x / 2:
		knife_speed = -knife_speed
	elif knife.position.x < -knife.texture.get_width():
		knife_speed = -knife_speed
		
func set_sprite(index):
	sprite_index = index
	self.texture = sprites[index][\"sprite\"]
	sprite_cut = 0
	center_sprite()

func next_sprite():
	sprite_index = (sprite_index + 1) % sprites.size()
	set_sprite(sprite_index)

func center_sprite():
	# Need to fix centering of sprites on screen to work for all screen sizes
	screen_center_x = get_viewport_rect().size.x
	screen_center_y = get_viewport_rect().size.y
	print(screen_center_x)
	print(screen_center_y)
	self.position.x = screen_center_x - self.texture.get_width() / 2
	self.position.y = screen_center_y - self.texture.get_height() / 2

func _on_timer_timeout(): # When the time is up -> move to next scene
	get_tree().change_scene_to_file(\"res://scenes/cooking.tscn\")
"

[sub_resource type="CanvasTexture" id="CanvasTexture_41fev"]

[node name="Node2D" type="Node2D"]
script = SubResource("GDScript_kk13c")
metadata/_edit_vertical_guides_ = [0.0, 1920.0]
metadata/_edit_horizontal_guides_ = [-1.0, 1080.0]

[node name="Background" type="Sprite2D" parent="."]
position = Vector2(959, 540.5)
scale = Vector2(1912, 1077)
texture = SubResource("CanvasTexture_41fev")

[node name="CutBoard" type="Sprite2D" parent="."]
position = Vector2(1038, 537)
scale = Vector2(0.686523, 0.5)
texture = ExtResource("1_4ly8t")

[node name="Timer" type="Timer" parent="."]

[connection signal="timeout" from="Timer" to="." method="_on_timer_timeout"]
